// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test MyCdkSecurityGroupStack 1`] = `
Object {
  "Outputs": Object {
    "DownloadKeyCommand": Object {
      "Value": "aws secretsmanager get-secret-value --secret-id ec2-ssh-key/cdk-keypair/private --query SecretString --output text > cdk-key.pem && chmod 400 cdk-key.pem",
    },
    "IPAddress": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "InstanceC1063A87",
          "PublicIp",
        ],
      },
    },
    "KeyName": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "KeyPairEC2KeyPaircdkkeypairA709CCF7",
          "KeyPairName",
        ],
      },
    },
    "sshcommand": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "ssh -i cdk-key.pem -o IdentitiesOnly=yes ec2-user@",
            Object {
              "Fn::GetAtt": Array [
                "InstanceC1063A87",
                "PublicIp",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaaArtifactHash2F3EDAE0": Object {
      "Description": "Artifact hash for asset \\"0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaa\\"",
      "Type": "String",
    },
    "AssetParameters0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaaS3Bucket2A8EBC96": Object {
      "Description": "S3 bucket for asset \\"0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaa\\"",
      "Type": "String",
    },
    "AssetParameters0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaaS3VersionKeyF3C0C287": Object {
      "Description": "S3 key for asset version \\"0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaa\\"",
      "Type": "String",
    },
    "AssetParametersafe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2ArtifactHash3CBE2F36": Object {
      "Description": "Artifact hash for asset \\"afe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2\\"",
      "Type": "String",
    },
    "AssetParametersafe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2S3BucketA216A7EC": Object {
      "Description": "S3 bucket for asset \\"afe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2\\"",
      "Type": "String",
    },
    "AssetParametersafe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2S3VersionKeyC59C30A0": Object {
      "Description": "S3 key for asset version \\"afe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2\\"",
      "Type": "String",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "EC2KeyNameManagerLambdaBE629145": Object {
      "DependsOn": Array [
        "EC2KeyPairManagerRoleB243C519",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersafe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2S3BucketA216A7EC",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersafe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2S3VersionKeyC59C30A0",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersafe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2S3VersionKeyC59C30A0",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "Custom CFN resource: Manage EC2 Key Pairs",
        "FunctionName": "MyCdkSecurityGroupStack-CFN-Resource-Custom-EC2-Key-Pair",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "EC2KeyPairManagerRoleB243C519",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 180,
      },
      "Type": "AWS::Lambda::Function",
    },
    "EC2KeyPairManagerPolicyEBBC1576": Object {
      "Properties": Object {
        "Description": "Used by Lambda CFN-Resource-Custom-EC2-Key-Pair, which is a custom CFN resource, managing EC2 Key Pairs",
        "ManagedPolicyName": "MyCdkSecurityGroupStack-CFN-Resource-Custom-EC2-Key-Pair",
        "Path": "/",
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ec2:DescribeKeyPairs",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:CreateKeyPair",
                "ec2:CreateTags",
              ],
              "Condition": Object {
                "StringLike": Object {
                  "aws:RequestTag/CreatedByCfnCustomResource": "CFN::Resource::Custom::EC2-Key-Pair",
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:*:*:key-pair/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ec2:CreateTags",
                "ec2:DeleteKeyPair",
                "ec2:DeleteTags",
              ],
              "Condition": Object {
                "StringLike": Object {
                  "ec2:ResourceTag/CreatedByCfnCustomResource": "CFN::Resource::Custom::EC2-Key-Pair",
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:*:*:key-pair/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "secretsmanager:ListSecrets",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "secretsmanager:CreateSecret",
                "secretsmanager:TagResource",
              ],
              "Condition": Object {
                "StringLike": Object {
                  "aws:RequestTag/CreatedByCfnCustomResource": "CFN::Resource::Custom::EC2-Key-Pair",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "secretsmanager:DeleteResourcePolicy",
                "secretsmanager:DeleteSecret",
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetResourcePolicy",
                "secretsmanager:GetSecretValue",
                "secretsmanager:ListSecretVersionIds",
                "secretsmanager:PutResourcePolicy",
                "secretsmanager:PutSecretValue",
                "secretsmanager:RestoreSecret",
                "secretsmanager:UntagResource",
                "secretsmanager:UpdateSecret",
                "secretsmanager:UpdateSecretVersionStage",
              ],
              "Condition": Object {
                "StringLike": Object {
                  "secretsmanager:ResourceTag/CreatedByCfnCustomResource": "CFN::Resource::Custom::EC2-Key-Pair",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "EC2KeyPairManagerRoleB243C519": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Used by Lambda CFN-Resource-Custom-EC2-Key-Pair, which is a custom CFN resource, managing EC2 Key Pairs",
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "EC2KeyPairManagerPolicyEBBC1576",
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "RoleName": "MyCdkSecurityGroupStack-CFN-Resource-Custom-EC2-Key-Pair",
      },
      "Type": "AWS::IAM::Role",
    },
    "InstanceC1063A87": Object {
      "DependsOn": Array [
        "ec2RoleDefaultPolicyC400AE24",
        "ec2Role38AB65C0",
      ],
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "IamInstanceProfile": Object {
          "Ref": "InstanceInstanceProfileAB5AEF02",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.micro",
        "KeyName": Object {
          "Fn::GetAtt": Array [
            "KeyPairEC2KeyPaircdkkeypairA709CCF7",
            "KeyPairName",
          ],
        },
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "SecurityGroupDD263621",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Ref": "VPCvpcsampleSubnet1SubnetA539A4A2",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyCdkSecurityGroupStack/Instance",
          },
        ],
        "UserData": Object {
          "Fn::Base64": Object {
            "Fn::Join": Array [
              "",
              Array [
                "#!/bin/bash
mkdir -p $(dirname '/tmp/",
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaaS3VersionKeyF3C0C287",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaaS3VersionKeyF3C0C287",
                        },
                      ],
                    },
                  ],
                },
                "')
aws s3 cp 's3://",
                Object {
                  "Ref": "AssetParameters0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaaS3Bucket2A8EBC96",
                },
                "/",
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaaS3VersionKeyF3C0C287",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaaS3VersionKeyF3C0C287",
                        },
                      ],
                    },
                  ],
                },
                "' '/tmp/",
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaaS3VersionKeyF3C0C287",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaaS3VersionKeyF3C0C287",
                        },
                      ],
                    },
                  ],
                },
                "'
set -e
chmod +x '/tmp/",
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaaS3VersionKeyF3C0C287",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaaS3VersionKeyF3C0C287",
                        },
                      ],
                    },
                  ],
                },
                "'
'/tmp/",
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaaS3VersionKeyF3C0C287",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaaS3VersionKeyF3C0C287",
                        },
                      ],
                    },
                  ],
                },
                "' --verbose -y",
              ],
            ],
          },
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "InstanceInstanceProfileAB5AEF02": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "ec2Role38AB65C0",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "KeyPairEC2KeyPaircdkkeypairA709CCF7": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": "Key Pair created with CDK Deployment",
        "ExposePublicKey": false,
        "KmsPrivate": "alias/aws/secretsmanager",
        "KmsPublic": "alias/aws/secretsmanager",
        "Name": "cdk-keypair",
        "RemoveKeySecretsAfterDays": 0,
        "SecretPrefix": "ec2-ssh-key/",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "EC2KeyNameManagerLambdaBE629145",
            "Arn",
          ],
        },
        "StackName": "MyCdkSecurityGroupStack",
        "StorePublicKey": false,
        "Tags": Object {
          "CreatedByCfnCustomResource": "CFN::Resource::Custom::EC2-Key-Pair",
        },
      },
      "Type": "Custom::EC2-Key-Pair",
      "UpdateReplacePolicy": "Delete",
    },
    "SecurityGroupDD263621": Object {
      "Properties": Object {
        "GroupDescription": "Allow SSH and HTTP (TCP port 22 and port 80) in",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow SSH Access",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow HTTP Access",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyCdkSecurityGroupStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyCdkSecurityGroupStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VPCvpcsampleSubnet1DefaultRoute3D9A7BBF": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCvpcsampleSubnet1RouteTable722A91FA",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCvpcsampleSubnet1RouteTable722A91FA": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyCdkSecurityGroupStack/VPC/vpc-sampleSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCvpcsampleSubnet1RouteTableAssociationB8159216": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCvpcsampleSubnet1RouteTable722A91FA",
        },
        "SubnetId": Object {
          "Ref": "VPCvpcsampleSubnet1SubnetA539A4A2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCvpcsampleSubnet1SubnetA539A4A2": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "vpc-sample",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "MyCdkSecurityGroupStack/VPC/vpc-sampleSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCvpcsampleSubnet2DefaultRoute9D3A48D6": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCvpcsampleSubnet2RouteTableE14F5FC8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCvpcsampleSubnet2RouteTableAssociation728EBB73": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCvpcsampleSubnet2RouteTableE14F5FC8",
        },
        "SubnetId": Object {
          "Ref": "VPCvpcsampleSubnet2SubnetD17624F8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCvpcsampleSubnet2RouteTableE14F5FC8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyCdkSecurityGroupStack/VPC/vpc-sampleSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCvpcsampleSubnet2SubnetD17624F8": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "vpc-sample",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "MyCdkSecurityGroupStack/VPC/vpc-sampleSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ec2Role38AB65C0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ec2RoleDefaultPolicyC400AE24": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "AssetParameters0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaaS3Bucket2A8EBC96",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "AssetParameters0fa78e5b139941f47c880be48a4d55e5fdd85b97f72a0e01d7438335d3634aaaS3Bucket2A8EBC96",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ec2RoleDefaultPolicyC400AE24",
        "Roles": Array [
          Object {
            "Ref": "ec2Role38AB65C0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
